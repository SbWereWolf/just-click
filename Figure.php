<?php
/**
 * Created by PhpStorm.
 * User: SbWereWolf
 * Date: 2019-04-08
 * Time: 18:48
 */

namespace PhpClassPart;

/**
 * Интерфейс шахматной фигуры
 *
 * Шахматная фигура это фишка для перемещения по шахматной доске
 * Фигура должна уметь себя нарисовать исходя из заданных координат
 * Фигура должна уметь определить можно ли её из исходной клетки переставить на целевую
 * Координаты клетки конечно должны быть экземпляром другого класса, но мы тут только один "класс" разрабатываем
 * Где рисовать фигуру и откуда куда ей ходить реализуют тоже другие классы (класс Доска и класс Игрок)
 * Все параметры фигуры задаются в конструкторе (фабрикой ?) при создании экземпляра
 * В дальнейшем можно у фигуры спросить
 * что она из себя предсталвяет: как называется, как выглядит и в какой команде,
 * по ходу игры эти свойства не должны меняться
 *
 * Как разработать класс в отрыве от места в бизнес процессе, в отрыве от архитектуры я себе не представляю
 * Не представля себе как разработать реализацию не известно чего, не известно где, поэтому разработал только интерфейс
 */
interface Figure
{
    /**
     * Проверка соблюдения правил при перемещении фигуры, без проверки прочих правил
     *
     * @param string $sourceCharacter буква исходной клетки
     * @param int $sourceNumber номер исходной клетки
     * @param string $targetCharacter буква целевой клетки
     * @param int $targetNumber номер целевой клетки
     * @return bool успешная или провальная проверка
     */
    public function testPlacement(string $sourceCharacter, int $sourceNumber,
                                  string $targetCharacter, int $targetNumber): bool;

    /**
     * Нарисовать фигуру на экране
     *
     * @param int $x координата пикселя
     * @param int $y координата пикселя
     */
    public function draw(int $x, int $y);

    /**
     * Наименование фигуры
     *
     * @return string
     */
    public function getTitle(): string;

    /**
     * Код макета (набора макетов) для отображения фигуры на доске
     *
     * @return string
     */
    public function getPicture(): string;

    /**
     * Допустим у нас шахматы супер универсальные, игра может быть на 2-3-4 и больше игроков и цвета задаются в скине
     *
     * @return int
     */
    public function getPlayer(): int;
}
